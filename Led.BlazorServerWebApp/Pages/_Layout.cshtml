@using Microsoft.AspNetCore.Components.Web
@namespace Led.BlazorServerWebApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" asp-append-version="true"/>
    <link href="Led.BlazorServerWebApp.styles.css" rel="stylesheet" />
    @*<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">*@
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
        // Source: https://stackoverflow.com/questions/62954461/the-assembly-does-not-contain-a-public-invokable-method-with-jsinvokableattribu
        var GLOBAL = {};
        GLOBAL.DotNetReference = null;
        GLOBAL.SetDotnetReference = function (pDotNetReference) {
            GLOBAL.DotNetReference = pDotNetReference;
        };

        // Source: https://github.com/dotnet/aspnetcore/issues/9974#issuecomment-921717446
        document.addEventListener("input", onInput);
        function onInput(e) {
         let target = e.target;
         if (target.localName == "div") 
         {
           if (!target.value && !target.__contenteditable) target.__contenteditable = true;
           if (target.__contenteditable) target.value = target.innerText;

           GLOBAL.DotNetReference.invokeMethodAsync("SetText", target.innerText);
         }
        }
    </script>
</body>
</html>
